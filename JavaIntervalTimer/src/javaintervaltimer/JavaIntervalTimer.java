package javaintervaltimer;

import java.awt.Color;
import java.util.Timer;
import java.util.TimerTask;

/**
 *
 * @author Markus Tuominen 2017
 */
public class JavaIntervalTimer extends javax.swing.JFrame {

    int restCounter = 0;
    int intervalCounter = 0;

    //First a litlle bit of rest ro get ready for training
    public void startRestTimer() {
        Timer timer = new Timer();
        restCounter = 5;
        startStopButton.setEnabled(false);

        TimerTask task = new TimerTask() {
            public void run() {
                timeField.setText(Integer.toString(restCounter));
                System.out.println(Integer.toString(restCounter));
                restCounter--;

                if (restCounter < 20) {
                    timeField.setForeground(Color.yellow);
                }

                if (restCounter < 10) {
                    timeField.setForeground(Color.red);
                }

                if (restCounter <= -1) {
                    timer.cancel();
                    startIntervalTimer();
                }
            }
        };
        timer.scheduleAtFixedRate(task, 1000, 1000);
    }

    public void startIntervalTimer() {
        Timer timer = new Timer();
        intervalCounter = 30;
        startStopButton.setEnabled(false);

        TimerTask task = new TimerTask() {
            public void run() {
                timeField.setText(Integer.toString(intervalCounter));
                System.out.println(Integer.toString(intervalCounter));
                intervalCounter--;
                
                if (intervalCounter > 20) {
                    timeField.setForeground(Color.green);
                }
                
                if (intervalCounter < 20) {
                    timeField.setForeground(Color.yellow);
                }

                if (intervalCounter < 10) {
                    timeField.setForeground(Color.red);
                }

                if (intervalCounter <= -1) {
                    timer.cancel();
                    startStopButton.setEnabled(true);
                }
            }
        };
        timer.scheduleAtFixedRate(task, 1000, 1000);
    }

    public JavaIntervalTimer() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the
     * JavaIntervalTimer. WARNING: Do NOT modify this code. The content of this
     * method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        timeField = new javax.swing.JTextField();
        startStopButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        timeField.setEditable(false);
        timeField.setBackground(new java.awt.Color(0, 0, 0));
        timeField.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        timeField.setForeground(new java.awt.Color(0, 255, 0));
        timeField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        timeField.setBorder(null);
        timeField.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        timeField.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        startStopButton.setBackground(new java.awt.Color(0, 255, 0));
        startStopButton.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        startStopButton.setText("Start");
        startStopButton.setBorder(null);
        startStopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startStopButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(80, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(startStopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timeField, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(80, 80, 80))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(timeField, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(startStopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(113, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startStopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startStopButtonActionPerformed
        startRestTimer();
    }//GEN-LAST:event_startStopButtonActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JavaIntervalTimer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JavaIntervalTimer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JavaIntervalTimer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JavaIntervalTimer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the JavaIntervalTimer */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JavaIntervalTimer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton startStopButton;
    private javax.swing.JTextField timeField;
    // End of variables declaration//GEN-END:variables
}
